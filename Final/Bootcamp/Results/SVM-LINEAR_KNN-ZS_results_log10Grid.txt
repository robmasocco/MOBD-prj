0.3719 (+/-0.018) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.3719 (+/-0.018) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.3719 (+/-0.018) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.3726 (+/-0.017) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.3726 (+/-0.017) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.3726 (+/-0.017) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.3719 (+/-0.019) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.3719 (+/-0.019) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.3719 (+/-0.019) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5060 (+/-0.040) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5060 (+/-0.040) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5060 (+/-0.040) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5064 (+/-0.039) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5064 (+/-0.039) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5064 (+/-0.039) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5055 (+/-0.039) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5055 (+/-0.039) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5055 (+/-0.039) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5044 (+/-0.028) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5044 (+/-0.028) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5044 (+/-0.028) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5040 (+/-0.027) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5040 (+/-0.027) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5040 (+/-0.027) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5050 (+/-0.025) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5050 (+/-0.025) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5050 (+/-0.025) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5431 (+/-0.037) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5431 (+/-0.037) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5431 (+/-0.037) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5429 (+/-0.035) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5429 (+/-0.035) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5429 (+/-0.035) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5433 (+/-0.036) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5433 (+/-0.036) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5433 (+/-0.036) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5181 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5181 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5181 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5187 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5187 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5187 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5190 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5190 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5190 (+/-0.031) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5457 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5457 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5457 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5455 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5455 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5455 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5458 (+/-0.034) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5458 (+/-0.034) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5458 (+/-0.034) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5193 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5193 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5193 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5205 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5205 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5205 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5208 (+/-0.031) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5208 (+/-0.031) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5208 (+/-0.031) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5432 (+/-0.030) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5432 (+/-0.030) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5432 (+/-0.030) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5427 (+/-0.029) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5427 (+/-0.029) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5427 (+/-0.029) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5443 (+/-0.028) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5443 (+/-0.028) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5443 (+/-0.028) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5205 (+/-0.031) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5205 (+/-0.031) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5205 (+/-0.031) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5203 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5203 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5203 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5204 (+/-0.030) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5204 (+/-0.030) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5204 (+/-0.030) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5438 (+/-0.029) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5438 (+/-0.029) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5438 (+/-0.029) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5427 (+/-0.029) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5427 (+/-0.029) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5427 (+/-0.029) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5439 (+/-0.028) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5439 (+/-0.028) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5439 (+/-0.028) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5208 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5208 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5208 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5201 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5201 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5201 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5196 (+/-0.031) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5196 (+/-0.031) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5196 (+/-0.031) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5439 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5439 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5439 (+/-0.030) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5429 (+/-0.029) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5429 (+/-0.029) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5429 (+/-0.029) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5441 (+/-0.027) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5441 (+/-0.027) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5441 (+/-0.027) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}

Best parameters:
{'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}

Best score: 0.5458
