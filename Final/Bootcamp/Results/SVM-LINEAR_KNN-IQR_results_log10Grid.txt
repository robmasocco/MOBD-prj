0.3789 (+/-0.022) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.3789 (+/-0.022) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.3789 (+/-0.022) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.3785 (+/-0.024) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.3785 (+/-0.024) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.3785 (+/-0.024) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.3793 (+/-0.022) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.3793 (+/-0.022) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.3793 (+/-0.022) for {'classifier__C': 0.001, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5045 (+/-0.036) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5045 (+/-0.036) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5045 (+/-0.036) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5047 (+/-0.037) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5047 (+/-0.037) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5047 (+/-0.037) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5050 (+/-0.037) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5050 (+/-0.037) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5050 (+/-0.037) for {'classifier__C': 0.001, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5101 (+/-0.034) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5101 (+/-0.034) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5101 (+/-0.034) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5107 (+/-0.031) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5107 (+/-0.031) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5107 (+/-0.031) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5108 (+/-0.032) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5108 (+/-0.032) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5108 (+/-0.032) for {'classifier__C': 0.01, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5478 (+/-0.039) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5478 (+/-0.039) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5478 (+/-0.039) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5484 (+/-0.039) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5484 (+/-0.039) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5484 (+/-0.039) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5487 (+/-0.040) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5487 (+/-0.040) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5487 (+/-0.040) for {'classifier__C': 0.01, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5226 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5226 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5226 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5228 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5228 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5228 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5235 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5235 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5235 (+/-0.035) for {'classifier__C': 0.1, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5494 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5494 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5494 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5501 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5501 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5501 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5498 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5498 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5498 (+/-0.033) for {'classifier__C': 0.1, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5256 (+/-0.033) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5256 (+/-0.033) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5256 (+/-0.033) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5256 (+/-0.033) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5256 (+/-0.033) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5256 (+/-0.033) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5248 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5248 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5248 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5498 (+/-0.034) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5498 (+/-0.034) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5498 (+/-0.034) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5505 (+/-0.035) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5505 (+/-0.035) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5505 (+/-0.035) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5502 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5502 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5502 (+/-0.032) for {'classifier__C': 1.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5257 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5257 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5257 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5258 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5258 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5258 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5253 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5253 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5253 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5493 (+/-0.034) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5493 (+/-0.034) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5493 (+/-0.034) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5498 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5498 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5498 (+/-0.033) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5498 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5498 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5498 (+/-0.032) for {'classifier__C': 10.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5250 (+/-0.034) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5250 (+/-0.034) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5250 (+/-0.034) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5263 (+/-0.031) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5263 (+/-0.031) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5263 (+/-0.031) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5259 (+/-0.033) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5259 (+/-0.033) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5259 (+/-0.033) for {'classifier__C': 100.0, 'classifier__class_weight': None, 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}
0.5501 (+/-0.033) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 2}
0.5501 (+/-0.033) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 5}
0.5501 (+/-0.033) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 2, 'replacer__n_neighbors': 10}
0.5495 (+/-0.032) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 2}
0.5495 (+/-0.032) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 5}
0.5495 (+/-0.032) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 5, 'replacer__n_neighbors': 10}
0.5512 (+/-0.032) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}
0.5512 (+/-0.032) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 5}
0.5512 (+/-0.032) for {'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 10}

Best parameters:
{'classifier__C': 100.0, 'classifier__class_weight': 'balanced', 'imputer__n_neighbors': 10, 'replacer__n_neighbors': 2}

Best score: 0.5512
